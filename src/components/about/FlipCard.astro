---
export interface FlipCardData {
  icon: string; // The type of icon depends on what you're using (e.g., emoji, component, or string)
  label: string;
  description: string;
}

interface Props {
  flipCardData: FlipCardData;
}

const { flipCardData }: { flipCardData: FlipCardData } = Astro.props;
---

<style>
  .flip-card {
    width: 128px;
    height: 128px;
    perspective: 1000px;
  }

  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }

  .flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
  }

  .flip-card-front,
  .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  .flip-card-front {
    background-color: #f9f9f9;
    color: #333;
  }

  .flip-card-back {
    background-color: #672098;
    color: white;
    transform: rotateY(180deg);
    padding: 10px;
  }

  .icon {
    font-size: 2.5rem;
  }

  .label {
    margin-top: 8px;
    font-size: 1.2rem;
    font-weight: bold;
  }

  .description {
    font-size: 1rem;
    line-height: 1.4;
  }
</style>

<div class="flip-card">
  <div class="flip-card-inner">
    <div class="flip-card-front">
      <div>
        <div>
          <svg width="64px" height="64px" viewBox="0 0 32 32" class="mx-auto">
            <use href=`/icons/bundle.svg#${flipCardData.icon}` />
          </svg>
        </div>
        <div class="label">{flipCardData.label}</div>
      </div>
    </div>
    <div class="flip-card-back">
      <div class="description">{flipCardData.description}</div>
    </div>
  </div>
</div>
